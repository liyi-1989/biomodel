{
    "contents" : "#setwd(\"/home/liyi/Dropbox/model\")\n#------------------------------------------------------------------------\n# 1. Load the Data\nX=read.csv(\"~/Dropbox/model/adults.recruits.merged.csv\")\nfeature_name=c(\"year\",\"lat\",\"lon\",\"sitenum\",\"cover\",\"filter_chla_mean\",\"filter_sst_mean\",\"filter_upw_mean\",\"mytilus.rec\")\nX=X[feature_name]\n\n\n# plot(X[,\"filter_upw_mean\"],X[,\"mytilus.rec\"])\n# plot(X[,\"filter_upw_mean\"],X[,\"cover\"])\n# \n# plot(X[,\"filter_chla_mean\"],X[,\"mytilus.rec\"])\n# plot(X[,\"filter_chla_mean\"],X[,\"cover\"])\n# \n# plot(log(X[,\"filter_upw_mean\"]),log(X[,\"mytilus.rec\"]))\n# plot(log(X[,\"filter_upw_mean\"]),log(X[,\"cover\"]))\n\n# X[X[,\"year\"]==1999+1&X[,\"sitenum\"]==24,\"cover\"]\n# tail(X,10)\n\n# ------------------------------------------------------------------------\n# 2. derive target variable\nnsample=dim(X)[1]\nX[\"ycover\"]=NA\nfor(i in 1:nsample){\n  idx=(X[,\"sitenum\"]==X[i,\"sitenum\"])&(X[,\"year\"]==X[i,\"year\"]+1)\n  \n  if(sum(idx)){\n    X[i,\"ycover\"]=X[idx,\"cover\"]\n  }\n}\n\nX[\"new_upw\"]=NA\nX[\"new_chla\"]=NA\nX[\"new_sst\"]=NA\nfor(i in 1:nsample){\n  idx=(X[,\"sitenum\"]==X[i,\"sitenum\"])&(X[,\"year\"]==X[i,\"year\"]+1)\n  \n  if(sum(idx)){\n    X[i,\"new_upw\"]=X[idx,\"filter_upw_mean\"]\n    X[i,\"new_chla\"]=X[idx,\"filter_chla_mean\"]\n    X[i,\"new_sst\"]=X[idx,\"filter_sst_mean\"]\n    \n  }\n}\n\nX1=X[complete.cases(X),]\n# tail(X1)\n# dim(X1)\n# unique(X1[\"year\"])\n\n\nlats=subset(X1,year==2001,select = c(lat))[,1]\nlons=subset(X1,year==2001,select = c(lon))[,1]\nlats=floor(lats*1000)\nlons=floor(lons*1000)\nlatlon=paste0(lats,lons) # unique identifier of each site, sorted by lats\n\nfor(i in 1:dim(X1)[1]){\n  X1[i,\"sitenum\"]=which(latlon==paste0(floor(X1[i,\"lat\"]*1000),floor(X1[i,\"lon\"]*1000)))\n}\n\n# ------------------------------------------------------------------------\n# 3. Set up the analysis data\n# 3.1 Target variable, next year abundance\ny=X1[,\"ycover\"]\ny[y==0]=min(y[y!=0])/2 # replace 0 to the minimum positive number\ny=log(y) # take log of the species number\n\n# 3.1.5 recruitment data\nR=X1[,\"mytilus.rec\"]\nR[R==0]=min(R[R!=0])/2\nR=log(R)\n\n# 3.2 Year for each observation\nY=X1[,\"year\"]\n\nS=X1[,\"sitenum\"]\n\n# 3.3 Abundance (for current year)\nA=X1[\"cover\"]\n\n# 3.4 Distance between sites\nD=dist(X[X[,\"year\"]==2001,\"lat\"],diag = T,upper = T)\nD=as.matrix(D)\nfor(i in 1:48){\n  for(j in 1:48){\n    if(i>j){\n      D[i,j]=-D[i,j]\n    }\n  }\n}\n\nD=as.matrix(D) #D[1:6,1:6]\n\n# 3.5 Environment variables\nE=X1[,c(\"filter_chla_mean\",\"filter_sst_mean\",\"filter_upw_mean\")]\n\nEnew=X1[,c(\"new_upw\",\"new_chla\",\"new_sst\")]\n\nmean_upw=mean(X1[,\"filter_upw_mean\"])\nsd_upw=sd(X1[,\"filter_upw_mean\"])\nX1[,\"filter_upw_mean\"]=(X1[,\"filter_upw_mean\"]-mean_upw)/sd_upw\n#------------------------------------------------------------------------\n# 4. Model 1 (larval+recruitment)\n\nm1logl=function(p,X1,R,D){\n  n=dim(X1)[1]\n  f=rep(0,n)\n  for(iobs in 1:n){\n    this_ker=0\n    this_site=X1[iobs,\"sitenum\"]\n    this_year=X1[iobs,\"year\"]\n    Xtemp=subset(X1,year==this_year)# all the sites that have the same year as the current observation\n    for(j in dim(Xtemp)[1]){\n      sitej=Xtemp[j,\"sitenum\"]\n      this_ker=this_ker+Xtemp[j,\"cover\"]*\n        exp(p[4]+p[5]*Xtemp[j,\"filter_upw_mean\"]-p[6]*Xtemp[j,\"filter_upw_mean\"]^2\n            +p[7]*D[this_site,sitej]-p[8]*D[this_site,sitej]^2)\n    }\n    #print(this_ker)\n    f[iobs]=log(this_ker)+p[1]+p[2]*X1[iobs,\"filter_upw_mean\"]-p[3]*X1[iobs,\"filter_upw_mean\"]^2\n  }\n  return(sum((R-f)^2))\n}\n\n#p0=c(0,1,1,0,1,1,1,1)/10\n#p0=c(0,10,1,0,1,1,1,1)/10 #210.257\n#p0=c(1,1,2,0,1,1,1,1) #210.0695\np0=c(-2,1,2,-2,1,1,1,1)\nm1logl(p0,X1,R,D)\n\n\nresm1=nlm(m1logl,p0,hessian=T,print.level=1,X1=X1,R=R,D=D,iterlim=1e4,steptol=1e-5)\np1=resm1$estimate\np1\n\nmu_hat=p1[7]/(2*p1[8])\nsigma_hat=1/sqrt(p1[8])\nE_in=p1[5]/(2*p1[6])\nE_out=p1[2]/(2*p1[3])\nmu_hat\nsigma_hat\nE_in*sd_upw+mean_upw\nE_out*sd_upw+mean_upw\n\nm1pred=function(p,X1,R,D){\n  n=dim(X1)[1]\n  f=rep(0,n)\n  for(iobs in 1:n){\n    this_ker=0\n    this_site=X1[iobs,\"sitenum\"]\n    this_year=X1[iobs,\"year\"]\n    Xtemp=subset(X1,year==this_year)# all the sites that have the same year as the current observation\n    for(j in dim(Xtemp)[1]){\n      sitej=Xtemp[j,\"sitenum\"]\n      this_ker=this_ker+Xtemp[j,\"cover\"]*\n        exp(p[4]+p[5]*Xtemp[j,\"filter_upw_mean\"]-p[6]*Xtemp[j,\"filter_upw_mean\"]^2\n            +p[7]*D[this_site,sitej]-p[8]*D[this_site,sitej]^2)\n    }\n    #print(this_ker)\n    f[iobs]=log(this_ker)+p[1]+p[2]*X1[iobs,\"filter_upw_mean\"]-p[3]*X1[iobs,\"filter_upw_mean\"]^2\n  }\n  return(f)\n}\n\nplot(R,m1pred(p1,X1,R,D))\nabline(a=0,b=1,col=2)\n#------------------------------------------------------------------------\n# 5. Model 2 (Abundance)\n\nm2logl=function(p,X1,y){\n  n=dim(X1)[1]\n  f=rep(0,n)\n  for(iobs in 1:n){\n    f[iobs]=X1[iobs,\"mytilus.rec\"]*exp(p[2]+p[3]*X1[iobs,\"new_upw\"]-p[4]*X1[iobs,\"new_upw\"]^2)+p[1]*X1[iobs,\"cover\"]\n  }\n  return(sum((exp(y)-f)^2))\n}\n\np0=c(1,0,1,1)\nm2logl(p0,X1,y)\n\nresm2=nlm(m2logl,p0,hessian=T,print.level=1,X1=X1,y=y,iterlim=1e4,steptol=1e-5)\np2=resm2$estimate\np2\n\nE_hat=p2[3]/(2*p2[4])\nE_hat*sd_upw+mean_upw\n\n\nm2pred=function(p,X1){\n  n=dim(X1)[1]\n  f=rep(0,n)\n  for(iobs in 1:n){\n    f[iobs]=X1[iobs,\"mytilus.rec\"]*exp(p[2]+p[3]*X1[iobs,\"new_upw\"]-p[4]*X1[iobs,\"new_upw\"]^2)+p[1]*X1[iobs,\"cover\"]\n  }\n  return(f)\n}\n\nplot(m2pred(p2,X1),X1[,\"ycover\"])\nabline(a=0,b=1,col=2)\n\n\n#------------------------------------------------------------------------\nplot(X1[,\"filter_upw_mean\"],X1[,\"mytilus.rec\"])\nplot(X1[,\"filter_upw_mean\"],exp(y))\nplot(X1[,\"new_upw\"],X1[,\"ycover\"])\n\n#------------------------------------------------------------------------\n# 4.1 log-likelihood for model 1(larval+recruitment)\n# input: \n# 1. parameters to optimize\n# 2. log of recruitment\n# 3. year for each observation\n# 3.5 site number\n# 4. Abundance\n# 5. distance between each sites\n# 6. environment variables\n#------------------------------------------------------------------------\n\n\n\n\n",
    "created" : 1439922708042.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "209|1|218|26|\n",
    "hash" : "617425125",
    "id" : "D0790FB0",
    "lastKnownWriteTime" : 1439955933,
    "path" : "~/Dropbox/model/hierarchical_model.R",
    "project_path" : "hierarchical_model.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}